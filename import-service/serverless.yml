service: import-service
frameworkVersion: "3"

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        name: basicAuthorizer
        functionArn: arn:aws:lambda:eu-central-1:007759678575:function:authorization-service-dev-basicAuthorizer
        identitySource:
          - $request.header.Authorization
        type: request
  environment:
    FILE_UPLOAD_BUCKET_NAME: ${self:custom.fileBucketName}
  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::${self:custom.fileBucketName}"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::${self:custom.fileBucketName}/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource: ${self:custom.sqsArn}

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: false
    packager: "yarn"
    excludeFiles: tests/*.test.js
  fileBucketName: epam-uploaded
  sqsArn: arn:aws:sqs:eu-central-1:007759678575:catalogItemsQueue

functions:
  importProductsFile:
    architecture: arm64
    handler: src/handler.importProductsFile
    events:
      - httpApi:
          path: /import/{fileName}
          method: GET
          authorizer:
            name: basicAuthorizer
  importFileParser:
    architecture: arm64
    handler: src/handler.importFileParser
    events:
      - s3:
          bucket: ${self:custom.fileBucketName}
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: "uploaded/"

resources:
  Resources:
    RestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: myRestApi
    GatewayResponseAccessDenied:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        RestApiId:
          Ref: RestApi
        ResponseType: MISSING_AUTHENTICATION_TOKEN
        StatusCode: "404"
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
