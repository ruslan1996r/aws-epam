service: product-service
frameworkVersion: "3"

# TODO: redo to "env"

plugins:
  - serverless-webpack
  - serverless-auto-swagger
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-central-1
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource: ${self:custom.sqsArn}
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: false
    packager: "yarn"
    excludeFiles: tests/*.test.js
  serverless-offline:
    httpPort: 4000
  autoswagger:
    apiType: "httpApi"
    generateSwaggerOnDeploy: false
    schemes: ["http", "https", "ws", "wss"]
    # excludeStages: ["production", "anyOtherStage"]
  sqsArn: arn:aws:sqs:eu-central-1:007759678575:catalogItemsQueue
  email: dshmc27@gmail.com

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${self:custom.email} # ${env:SNS_EMAIL}
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          limitedQuantity:
            - "false"
    SNSSubscription1:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ${self:custom.email}
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          limitedQuantity:
            - "true"

functions:
  getProductsList:
    architecture: arm64
    handler: src/handler.getProductsList
    events:
      - httpApi:
          path: /products
          method: GET
  getProductsById:
    architecture: arm64
    handler: src/handler.getProductsById
    events:
      - httpApi:
          path: /products/{productId}
          method: GET
  createProduct:
    architecture: arm64
    handler: src/handler.createProduct
    events:
      - httpApi:
          path: /products
          method: POST
  catalogBatchProcess:
    architecture: arm64
    handler: src/handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: ${self:custom.sqsArn}
